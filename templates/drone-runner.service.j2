
[Unit]
Description=Drone Runner CI/CD
{#
    If running under molecule, then we're using the docker daemon
    in the dind container, the one we're running in.  That means
    that we installed docker.io, not docker-ce, and there IS NO
    docker daemon locally, so these deps don't apply.
#}
{% if not lookup('env', 'MOLECULE_SCENARIO_NAME') %}
After=docker.service
After=drone.service
Requires=docker.service
{% endif %}
After=drone.service
Wants=network-online.target docker.socket

[Service]
 TimeoutStartSec=infinity

ExecStartPre=-/usr/bin/docker kill drone-runner-docker
ExecStartPre=-/usr/bin/docker rm drone-runner-docker
{% if lookup('env', 'MOLECULE_SCENARIO_NAME') %}
ExecStartPre=/usr/bin/docker pull drone/drone-runner-docker:latest
{% endif %}

ExecStart=/usr/bin/docker run --rm --name drone-runner{% if lookup('env', 'MOLECULE_SCENARIO_NAME') %}-ubuntu-{{ ansible_distribution_release }}{% endif%} \
    -e TZ=America/New_York \
{% if not lookup('env', 'MOLECULE_SCENARIO_NAME') %}
    --env-file "{% for dataset in gitea_datasets %}{% if dataset.name == 'gitea' %}{{ dataset.mountpoint }}{{ gitea_drone_env_file }}{% endif %}{% endfor %}" \
{% else %}
    --env-file "{{ lookup('env', 'MOLECULE_SCENARIO_DIRECTORY') }}/molecule_test{{ gitea_drone_env_file }}" \
{% endif %}
    -e DRONE_RUNNER_CAPACITY={{ gitea_dronerunner_capacity }} \
    -e DRONE_RUNNER_NAME=Runner1 \
    -e DRONE_UI_USERNAME=root \
    -e DRONE_UI_PASSWORD=root \
    -p {{ gitea_dronerunner_port }}:3000 \
{# We don't need the docker network under molecule #}
{% if not lookup('env', 'MOLECULE_SCENARIO_NAME') %}
    --network {{ gitea_network_name }} \
{% endif %}
    -v /var/run/docker.sock:/var/run/docker.sock \
    drone/drone-runner-docker:latest

ExecStop=/usr/bin/docker stop drone-runner
ExecStopPost=/usr/bin/docker rm -f drone-runner
ExecReload=/usr/bin/docker restart drone-runner

Restart=always
RestartSec=20s
Type=simple
NotifyAccess=all

[Install]
WantedBy=multi-user.target
