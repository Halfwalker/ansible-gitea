
[Unit]
Description=Drone CI/CD
{#
    If running under molecule, then we're using the docker daemon
    in the dind container, the one we're running in.  That means
    that we installed docker.io, not docker-ce, and there IS NO
    docker daemon locally, so these deps don't apply.
#}
{% if not lookup('env', 'MOLECULE_SCENARIO_NAME') %}
After=docker.service
Requires=docker.service
{% endif %}
Wants=network-online.target docker.socket

[Service]
 TimeoutStartSec=infinity

ExecStartPre=-/usr/bin/docker kill drone
ExecStartPre=-/usr/bin/docker rm drone
{% if lookup('env', 'MOLECULE_SCENARIO_NAME') %}
ExecStartPre=/usr/bin/docker pull drone/drone:latest
{% endif %}

ExecStart=/usr/bin/docker run --rm --name drone{% if lookup('env', 'MOLECULE_SCENARIO_NAME') %}-ubuntu-{{ ansible_distribution_release }}{% endif%} \
    -e TZ={{ timezone }} \
{% if not lookup('env', 'MOLECULE_SCENARIO_NAME') %}
    --env-file "{% for dataset in gitea_datasets %}{% if dataset.name == 'gitea' %}{{ dataset.mountpoint }}{{ gitea_drone_env_file }}{% endif %}{% endfor %}" \
    --env-file "{% for dataset in gitea_datasets %}{% if dataset.name == 'gitea' %}{{ dataset.mountpoint }}{{ gitea_admin_token_file }}{% endif %}{% endfor %}" \
{% else %}
    --env-file "{{ lookup('env', 'MOLECULE_SCENARIO_DIRECTORY') }}/molecule_test{{ gitea_drone_env_file }}" \
    --env-file "{{ lookup('env', 'MOLECULE_SCENARIO_DIRECTORY') }}/molecule_test{{ gitea_admin_token_file }}" \
{% endif %}
    -p {{ gitea_drone_port }}:80 \
{# We don't need the docker network under molecule #}
{% if not lookup('env', 'MOLECULE_SCENARIO_NAME') %}
    --network {{ gitea_network_name }} \
{% endif %}
    -v /var/run/docker.sock:/var/run/docker.sock \
{% if not lookup('env', 'MOLECULE_SCENARIO_NAME') %}{% if item.volumes is defined %}{% for vol in item.volumes %}
    -v {{ vol.host }}:{{ vol.cont }} \
{% endfor %}{% endif %}{% else %}
    -v {{ lookup('env', 'MOLECULE_SCENARIO_DIRECTORY') }}/molecule_test:/data \
{% endif %}
    drone/drone:latest

ExecStop=/usr/bin/docker stop drone
ExecStopPost=/usr/bin/docker rm -f drone
ExecReload=/usr/bin/docker restart drone

Restart=always
RestartSec=20s
Type=simple
NotifyAccess=all

[Install]
WantedBy=multi-user.target
